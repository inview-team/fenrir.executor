// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/kubernetes/{namespace}/deployments/{deployment_name}": {
            "get": {
                "description": "Get Deployment Information by name and namespace",
                "tags": [
                    "Deployments"
                ],
                "summary": "Get Deployment Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment name",
                        "name": "deployment_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.Deployment"
                        }
                    }
                }
            },
            "put": {
                "description": "Scale Deployment",
                "tags": [
                    "Deployments"
                ],
                "summary": "Scale Deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of Deployment",
                        "name": "deployment_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Amount of Replicas",
                        "name": "replicas",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/kubernetes/{namespace}/pods": {
            "get": {
                "description": "Lists Pods by Deployment",
                "tags": [
                    "Pods"
                ],
                "summary": "Lists Pods by Deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of deployment",
                        "name": "deployment",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.DeploymentPods"
                        }
                    }
                }
            }
        },
        "/kubernetes/{namespace}/pods/{pod_name}": {
            "get": {
                "description": "Get Pod Information",
                "tags": [
                    "Pods"
                ],
                "summary": "Get Pod Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of pod",
                        "name": "pod_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.Pod"
                        }
                    }
                }
            },
            "delete": {
                "description": "restart pod",
                "tags": [
                    "Pods"
                ],
                "summary": "Restart Pod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of pod",
                        "name": "pod_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "views.ContainerResources": {
            "type": "object",
            "properties": {
                "cpuLimits": {
                    "type": "integer"
                },
                "cpuUsage": {
                    "type": "integer"
                },
                "memoryLimits": {
                    "type": "integer"
                },
                "memoryUsage": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "views.Deployment": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "replicas": {
                    "type": "integer"
                }
            }
        },
        "views.DeploymentPod": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "views.DeploymentPods": {
            "type": "object",
            "properties": {
                "pods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/views.DeploymentPod"
                    }
                }
            }
        },
        "views.Pod": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/views.ContainerResources"
                    }
                },
                "restarts": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:30000",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Swagger Backend API",
	Description:      "Backend Server for Competitions",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
